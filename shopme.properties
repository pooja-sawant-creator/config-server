spring.h2.console.enabled=true

#spring.datasource.url=jdbc:h2:file:./db
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=
#spring.datasource.password=

#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update

eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka/
spring.cloud.config.uri=http://localhost:8888

#spring.datasource.url=jdbc:mysql://192.168.130.225:3306/rbi_setu?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

#spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/rbisetuportaldb
#spring.datasource.hikari.username=root
#spring.datasource.hikari.password=root

#Hibernate Configuration
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Specify the naming strategy if needed
# spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#Oauth2 configure
#spring.security.oauth2.client.registration.google.client-id= 
#spring.security.oauth2.client.registration.google.client-secret= 

#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email =
spring.main.allow-bean-definition-overriding=true